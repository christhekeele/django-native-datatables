// Generated by CoffeeScript 1.3.1
(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  $(document).ready(function() {
    var $datatable, datatable, multi_filter, paginate, single_filter, table_name, tables, update_table, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _ref1, _ref2;
    tables = $('div:data("table")');
    for (_i = 0, _len = tables.length; _i < _len; _i++) {
      datatable = tables[_i];
      $datatable = $(datatable);
      table_name = $(tables).length > 1 ? 'table' : $datatable.data("table");
      window[table_name] = $datatable.data("table-state");
      _ref = $datatable.find(':data("table-single-filter")');
      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
        single_filter = _ref[_j];
        $(single_filter).find(':data("filter")').live('click', function() {
          return update_table(table_name, 'single_filter', $(this).parent().data('table-single-filter'), $(this).data('filter'));
        });
      }
      _ref1 = $datatable.find(':data("table-multi-filter")');
      for (_k = 0, _len2 = _ref1.length; _k < _len2; _k++) {
        multi_filter = _ref1[_k];
        $(multi_filter).find(':data("filter")').live('click', function() {
          return update_table(table_name, 'multi_filter', $(this).parent().data('table-multi-filter'), $(this).data('filter'));
        });
      }
      $datatable.find(':data("table-search")').live('keyup', function() {
        return update_table(table_name, 'search', false, $(this).val());
      });
      $datatable.find(':data("table-order")').live('click', function() {
        var default_order;
        default_order = 'asc';
        $(this).parent().children(':data("table-order")').removeClass('active');
        $(this).addClass('active');
        if (!$(this).hasClass('asc') && !$(this).hasClass('desc')) {
          $(this).addClass(default_order);
        } else {
          $(this).toggleClass("asc desc");
        }
        return update_table(table_name, 'order', $(this).data('table-order'), default_order);
      });
      _ref2 = $datatable.find(':data("table-paginate")');
      for (_l = 0, _len3 = _ref2.length; _l < _len3; _l++) {
        paginate = _ref2[_l];
        $(paginate).find(':data("per_page")').live('click', function() {
          return update_table(table_name, 'per_page', false, $(this).data('per_page'));
        });
        $(paginate).find(':data("page")').live('click', function() {
          return update_table(table_name, 'page', false, $(this).data('page'));
        });
      }
    }
    return update_table = function(table_name, action, target, value) {
      var array, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9;
      if (action === 'search') {
        window[table_name].search_param = value;
        window[table_name].page_number = 1;
      }
      if (action === 'single_filter') {
        if (!((_ref3 = window[table_name]) != null ? (_ref4 = _ref3.filter_values) != null ? _ref4[target] : void 0 : void 0)) {
          window[table_name].filter_values[target] = [];
        }
        array = window[table_name].filter_values[target];
        if (value) {
          if (_ref5 = !value, __indexOf.call(array, _ref5) >= 0) {

          } else {
            array.length = 0;
            array.push(value);
          }
        } else {
          array.length = 0;
        }
        window[table_name].page_number = 1;
      }
      if (action === 'multi_filter') {
        if (!((_ref6 = window[table_name]) != null ? (_ref7 = _ref6.filter_values) != null ? _ref7[target] : void 0 : void 0)) {
          window[table_name].filter_values[target] = [];
        }
        array = window[table_name].filter_values[target];
        if (value) {
          if (__indexOf.call(array, value) >= 0) {
            array.splice(array.indexOf(value), 1);
          } else {
            array.push(value);
          }
        } else {
          window[table_name].filter_values[target].length = 0;
        }
        window[table_name].page_number = 1;
      }
      if (action === 'order') {
        if (((_ref8 = window[table_name].ordering) != null ? _ref8[target] : void 0) === "desc") {
          window[table_name].ordering = {};
          window[table_name].ordering[target] = "asc";
        } else if (((_ref9 = window[table_name].ordering) != null ? _ref9[target] : void 0) === "asc") {
          window[table_name].ordering = {};
          window[table_name].ordering[target] = "desc";
        } else {
          window[table_name].ordering = {};
          window[table_name].ordering[target] = value;
        }
      }
      if (action === 'per_page') {
        window[table_name].per_page = value;
        window[table_name].page_number = 1;
      }
      if (action === 'page') {
        window[table_name].page_number = value;
      }
      return $.ajax({
        url: "/company/table/",
        type: "GET",
        datatype: "html",
        contentType: "application/json",
        data: {
          datatable: JSON.stringify(window[table_name])
        },
        success: function(data) {
          var table_body, table_pages;
          table_body = $datatable.find(':data("table-content=' + table_name + '")');
          table_body.html($(data).find(':data("table-content=' + table_name + '")').children());
          table_pages = $datatable.find(':data("table-paginate=' + table_name + '")');
          return table_pages.html($(data).find(':data("table-paginate=' + table_name + '")').children());
        }
      });
    };
  });

}).call(this);
